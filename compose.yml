version: "3.8"
services:
  api-service:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000"
    environment:
      - APP_PORT=3000
      - APP_HOST=0.0.0.0
      - JWT_SECRET_KEY=1d4cc7f0f76557202ddde48415e737e4508c387b05c5ec40d7df88dae84d730c
#      - JWT_PRIVATE_KEY_PATH=/etc/keys/private.key
#      - JWT_PUBLIC_KEY_PATH=/etc/keys/public.key
      - AUTO_MIGRATE=true
      - MIGRATIONS_TABLE=pgmigrations
      - MIGRATIONS_DIR=/app/migrations
      - DATABASE_HOST=postgres
      - DATABASE_USER=service
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=service
      - OTEL_COLLECTOR_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_RESOURCE_ATTRIBUTES=service.name=api-service
    volumes:
      - ./test/keys/private.key:/etc/keys/private.key:ro
      - ./test/keys/public.key:/etc/keys/public.key:ro
    networks:
      - local

  postgres:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: service
      POSTGRES_PASSWORD: password
      POSTGRES_DB: service
    ports:
      - "5432:5432"
    networks:
      - local

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector.yaml"]
    volumes:
      - ./dev/otel-collector.yaml:/etc/otel-collector.yaml
    ports:
      - "4317:4317" # OTLP gRPC receiver
    depends_on:
      - jaeger
    networks:
      - local

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./dev/prometheus.yaml:/etc/prometheus/prometheus.yaml
    ports:
      - "9090:9090"
    networks:
      - local

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    networks:
      - local

networks:
  local:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data:
  grafana_data: